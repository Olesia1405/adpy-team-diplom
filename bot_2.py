"""
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä __init__:

–î–æ–±–∞–≤–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä db_params –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–°–æ–∑–¥–∞–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤.

–ú–µ—Ç–æ–¥ add_to_favorites:
–ü–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤ –∫–ª–∞—Å—Å AnotherVKBot –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç self.cursor –∏ self.connection –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
–õ–æ–≥–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É users –∏ –≤ —Ç–∞–±–ª–∏—Ü—É favorites.

–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π:
–í –º–µ—Ç–æ–¥–µ handle_message, –ø—Ä–∏ –≤—ã–∑–æ–≤–µ add_to_favorites, –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö. –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" –∏ "https://vk.com/id123456" –Ω–∞ –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ VK API –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.

–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞:
–í if __name__ == '__main__': –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–º–µ–Ω–∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ db_params –∏ token –Ω–∞ —Å–≤–æ–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

–ú–µ—Ç–æ–¥ send_message_with_buttons:
–î–æ–±–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ send_message_with_buttons –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è VkKeyboard –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ get_random_id() –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.

–ú–µ—Ç–æ–¥—ã send_help_message –∏ send_unknown_command_message:
–û–±–Ω–æ–≤–ª–µ–Ω—ã, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ send_message_with_buttons –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏.

–ú–µ—Ç–æ–¥ send_message:
–°–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –∫–Ω–æ–ø–æ–∫.
"""


import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from btn_text import BTN_FIND_PAIR, BTN_LIKE, BTN_NEXT, BTN_HELP, buttons_choice
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id
import logging
import psycopg2              # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å PostgreSQL
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class AnotherVKBot:
    def __init__(self, token, db_params):
        self.token = token
        self.vk_session = vk_api.VkApi(token=self.token)
        self.vk = self.vk_session.get_api()
        self.longpoll = VkLongPoll(self.vk_session)

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        self.connection = psycopg2.connect(**db_params)
        self.cursor = self.connection.cursor()
        logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    def create_keyboard(self, buttons):
        keyboard = VkKeyboard(one_time=False)
        for btn_text, btn_color in buttons:
            keyboard.add_button(btn_text, color=btn_color)
        return keyboard.get_keyboard()

    # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
    def send_message_with_buttons(self, user_id, message, buttons):
        keyboard = VkKeyboard(one_time=True)
        for btn_text, btn_color in buttons:
            keyboard.add_button(btn_text, color=btn_color)
        self.vk.messages.send(
            user_id=user_id,
            random_id=get_random_id(),
            message=message,
            keyboard=keyboard.get_keyboard()
        )

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã
    def find_pair(self, user_id):
        logger.info(f"–ü–æ–∏—Å–∫ –ø–∞—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}")
        # –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã
        user_info = {
            "name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            "profile_link": "https://vk.com/id123456",
            "photos": ["photo123456_1", "photo123456_2", "photo123456_3"]
        }
        message = f"–ò–º—è: {user_info['name']}\n–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {user_info['profile_link']}"
        attachments = ",".join(user_info['photos'])  # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VK attachment –¥–ª—è —Ñ–æ—Ç–æ
        self.send_message(user_id, message, attachment=attachments)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    def add_to_favorites(self, user_id, name, profile_link):
        self.cursor.execute("SELECT * FROM users WHERE user_id = %s", (user_id,))
        user = self.cursor.fetchone()

        if not user:
            self.cursor.execute(
                "INSERT INTO users (user_id, name, profile_link) VALUES (%s, %s, %s)",
                (user_id, name, profile_link)
            )
            self.connection.commit()
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É users.")

        self.cursor.execute(
            "INSERT INTO favorites (user_id) VALUES (%s)",
            (user_id,)
        )
        self.connection.commit()
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def show_next_user(self, user_id):
        logger.info(f"–ü–æ–∫–∞–∑ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è {user_id}")
        user_info = {
            "name": "–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞",
            "profile_link": "https://vk.com/id654321",
            "photos": ["photo654321_1", "photo654321_2", "photo654321_3"]
        }
        message = f"–ò–º—è: {user_info['name']}\n–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {user_info['profile_link']}"
        attachments = ",".join(user_info['photos'])  # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VK attachment –¥–ª—è —Ñ–æ—Ç–æ
        self.send_message(user_id, message, attachment=attachments)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é
    def send_help_message(self, user_id):
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –¥–ª—è {user_id}")
        help_text = ("–ö–æ–º–∞–Ω–¥—ã:\n"
                     "1. –ù–∞–π—Ç–∏ –ø–∞—Ä—É üíì ‚Äî –ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞\n"
                     "2. –ù—Ä–∞–≤–∏—Ç—Å—è üëç ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ\n"
                     "3. –°–ª–µ–¥—É—é—â–∏–π üëâ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞\n"
                     "4. –ü–æ–º–æ—â—å üÜò ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        self.send_message_with_buttons(user_id, help_text, buttons_choice)

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
    def send_unknown_command_message(self, user_id):
        logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        self.send_message_with_buttons(user_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É '–ü–æ–º–æ—â—å üÜò' –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.", buttons_choice)

    # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    def send_message(self, user_id, message, attachment=None):
        self.vk.messages.send(
            user_id=user_id,
            random_id=get_random_id(),
            message=message,
            attachment=attachment,
            keyboard=self.create_keyboard(buttons_choice)
        )

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    def handle_message(self, event):
        if event.text == BTN_FIND_PAIR:
            # –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
            self.find_pair(event.user_id)
        elif event.text == BTN_LIKE:
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            self.add_to_favorites(event.user_id, "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "https://vk.com/id123456")  # –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        elif event.text == BTN_NEXT:
            # –°–ª–µ–¥—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            self.show_next_user(event.user_id)
        elif event.text == BTN_HELP:
            # –ü–æ–º–æ—â—å
            self.send_help_message(event.user_id)
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            self.send_unknown_command_message(event.user_id)

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    def run(self):
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        for event in self.longpoll.listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                self.handle_message(event)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    db_params = {
        'dbname': os.getenv('DB_NAME'),
        'user': os.getenv('DB_USER'),
        'password': os.getenv('DB_PASSWORD'),
        'host': 'localhost',
        'port': '5432'
    }
    token = os.getenv('VK_GROUP_TOKEN')  # –£–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
    bot = AnotherVKBot(token, db_params)
    bot.run()
