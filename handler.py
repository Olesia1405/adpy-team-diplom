"""
 –ú–æ–¥—É–ª—å handler.py

 –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å Handler, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –∏
—Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ VK –±–æ—Ç–µ.
–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –º–æ–¥—É–ª—è ‚Äî —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥—è—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å
—Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
- –ö–ª–∞—Å—Å Handler:
    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
    - messag_handler: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    - state_handler: –£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    1. –°–æ–∑–¥–∞–π—Ç–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Handler, –ø–µ—Ä–µ–¥–∞–≤ –æ–±—ä–µ–∫—Ç VKBot:
       `handler = Handler(vk_bot)`

    2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `messag_handler` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:
       `handler.messag_handler(event, user_name, request)`

    3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `state_handler` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
       `handler.state_handler(state, event, user_id, user_name, request)`
"""
import logging
from btn_text import BTN_FIND_PAIR, buttons_regist, buttons_start, buttons_choice, welcome_message, BTN_REGISTRATION
from utils import DatabaseUtils, AuxiliaryUtils

logger = logging.getLogger(__name__)


class Handler:
    """
    –ö–ª–∞—Å—Å Handler –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ VK –±–æ—Ç–µ.

    –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ —Ç–∞–∫–∂–µ
    —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ "–æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã".

    –ú–µ—Ç–æ–¥—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ VKBot –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
    """

    def __init__(self, vk_bot):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ Handler.

        :param vk_bot: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ VKBot, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã
                       –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
        """
        self.vk_bot = vk_bot
        self.send_message = vk_bot.send_message
        self.create_keyboard = vk_bot.create_keyboard
        self.util_db = DatabaseUtils()
        self.utils_auxiliary = AuxiliaryUtils()


    def message_handler(self, event, user_name: str, request: str):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.

        –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º,
        –∏—â–µ—Ç –µ–º—É –ø–∞—Ä—É –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ–Ω –Ω–µ –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å.

        :param event: –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è –∏–∑ VK API, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏.
        :param user_name: str –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç.
        :param request: str –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.        """

        is_user_in_db = self.util_db.check_user_existence_db(event.user_id)
        if request == "–Ω–∞—á–∞—Ç—å":
            if is_user_in_db is None:
                self.send_message(event.user_id, f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã {welcome_message}",
                                  keyboard=self.create_keyboard(buttons_regist))
            else:
                self.send_message(event.user_id, f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã",
                                  keyboard=self.create_keyboard(buttons_start))

        elif request == BTN_REGISTRATION.lower():
            self.utils_auxiliary.prepare_user_candidate_data(event.user_id)
            self.send_message(event.user_id, f"{user_name} –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!",
                              keyboard=self.create_keyboard(buttons_start))


        elif request == BTN_FIND_PAIR.lower() and is_user_in_db:
            self.send_message(event.user_id, f"{user_name} –∏—â–µ–º –≤–∞–º –ø–∞—Ä—É!",
                              keyboard=self.create_keyboard(buttons_choice))
            self.vk_bot.set_user_state(event.user_id, "waiting_for_pair")

        else:
            text = '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª.–ê–∫—Ç–∏–≤–∏—Ä—É—é –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
            if is_user_in_db is None:
                self.send_message(event.user_id, text,
                                  keyboard=self.create_keyboard(buttons_regist)
                                  )
            else:
                self.send_message(event.user_id, text,
                                  keyboard=self.create_keyboard(buttons_start)
                                  )

    def state_handler(self, state: str, event, user_id: int, user_name: str, request: str):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.

        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
        (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã). –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ–∏—Å–∫,
        –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.

        :param state: str –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "waiting_for_pair").
        :param event: –û–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è –∏–∑ VK API.
        :param user_id: int –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
        :param user_name: str –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        :param request: str –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
        """
        if state == "waiting_for_pair":
            self.send_message(user_id, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {request}. –ò—â–µ–º –≤–∞–º –ø–∞—Ä—É!")
            self.vk_bot.set_user_state(user_id, None)
