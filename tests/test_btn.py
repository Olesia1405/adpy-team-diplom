"""
test_button_constants: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–µ—Ç–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∑–∞–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
test_buttons_regist: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è —Ç–µ–∫—Å—Ç –∏ —Ü–≤–µ—Ç.
test_buttons_start: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —ç–∫—Ä–∞–Ω–∞.
test_buttons_choice: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è ("–ù—Ä–∞–≤–∏—Ç—Å—è", "–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è", "–°–ª–µ–¥—É—é—â–∏–π").
test_buttons_choice_sex: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞.
test_welcome_message: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
"""

import pytest
from vk_api.keyboard import VkKeyboardColor
from btn_text import (
    BTN_REGISTRATION, BTN_FIND_PAIR, BTN_HELP, BTN_LIKE, BTN_DISLIKE,
    BTN_SEX_MAN, BTN_SEX_WOMAN, buttons_regist, buttons_start,
    buttons_choice, buttons_choice_sex, WELCOME_MESSAGE, BTN_CHOSEN, BTN_MAIN_MENU, BTN_NEXT, BTN_BACK,
    BTN_REMOVE_FAVORITES, buttons_favorites, buttons_favorites_next, buttons_favorites_back, HELP_MESSAGE
)


# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫
def test_button_constants():
    assert BTN_REGISTRATION == '–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüìã'
    assert BTN_FIND_PAIR == "–ù–∞–π—Ç–∏ –ø–∞—Ä—Éüíì"
    assert BTN_HELP == "–ü–æ–º–æ—â—åüÜò"
    assert BTN_LIKE == "–ù—Ä–∞–≤–∏—Ç—Å—èüëç"
    assert BTN_DISLIKE == "–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—èüëé"
    assert BTN_SEX_MAN == '–ö–∞–≤–∞–ª–µ—Ä–∞üôé‚Äç‚ôÇÔ∏è'
    assert BTN_SEX_WOMAN == '–ñ–µ–Ω—â–∏–Ω—Éüôé‚Äç‚ôÄÔ∏èÔ∏è'
    assert BTN_MAIN_MENU == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè†'
    assert BTN_CHOSEN == "‚≠ê–ò–∑–±—Ä–∞–Ω–Ω—ã–µ‚≠ê"
    assert BTN_NEXT == '–°–ª–µ–¥—É—é—â–∏–πüîú'
    assert BTN_BACK == '–ü—Ä–µ–¥—ã–¥—É—â–∏–πüîô'
    assert BTN_REMOVE_FAVORITES == '–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Öüíî'


# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏ –∏—Ö —Ü–≤–µ—Ç–∞
def test_buttons_regist():
    assert buttons_regist == [
        (BTN_REGISTRATION, VkKeyboardColor.POSITIVE),
        (BTN_HELP, VkKeyboardColor.NEGATIVE)
    ]


def test_buttons_start():
    assert buttons_start == [
        (BTN_FIND_PAIR, VkKeyboardColor.PRIMARY),
        (BTN_CHOSEN, VkKeyboardColor.POSITIVE),
        (BTN_HELP, VkKeyboardColor.NEGATIVE)
    ]


def test_buttons_choice():
    assert buttons_choice == [
        (BTN_LIKE, VkKeyboardColor.POSITIVE),
        (BTN_DISLIKE, VkKeyboardColor.NEGATIVE),
        (BTN_MAIN_MENU, VkKeyboardColor.PRIMARY)
    ]


def test_buttons_choice_sex():
    assert buttons_choice_sex == [
        (BTN_SEX_MAN, VkKeyboardColor.PRIMARY),
        (BTN_SEX_WOMAN, VkKeyboardColor.POSITIVE),
        (BTN_MAIN_MENU, VkKeyboardColor.PRIMARY)
    ]


def test_buttons_favorites():
    assert buttons_favorites == [(BTN_BACK, VkKeyboardColor.PRIMARY),
                                 (BTN_NEXT, VkKeyboardColor.PRIMARY),
                                 (BTN_REMOVE_FAVORITES, VkKeyboardColor.NEGATIVE),
                                 (BTN_MAIN_MENU, VkKeyboardColor.POSITIVE)
                                 ]


def test_buttons_favorites_next():
    assert buttons_favorites_next == [(BTN_NEXT, VkKeyboardColor.PRIMARY),
                                      (BTN_REMOVE_FAVORITES, VkKeyboardColor.NEGATIVE),
                                      (BTN_MAIN_MENU, VkKeyboardColor.POSITIVE)
                                      ]


def test_buttons_favorites_back():
    assert buttons_favorites_back == [(BTN_BACK, VkKeyboardColor.PRIMARY),
                                      (BTN_REMOVE_FAVORITES, VkKeyboardColor.NEGATIVE),
                                      (BTN_MAIN_MENU, VkKeyboardColor.POSITIVE)
                                      ]


# –¢–µ—Å—Ç–∏—Ä—É–µ–º welcome_message
def test_welcome_message():
    expected_message = (
        '\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–≤–æ–µ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–∏ üíï! \n\n'
        '–ú—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π –∏ –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞.\n\n'
        '–ù–∞–∂–º–∏ "–ù–∞–π—Ç–∏ –ø–∞—Ä—É üíì", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫! –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ ‚Äî '
        '–≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ "–ü–æ–º–æ—â—å üÜò".\n\n'
        '–£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ, –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –∑–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –∏–º–µ–Ω–Ω–æ —Ç–æ–≥–æ, –∫–æ–≥–æ –∏—â–µ—à—å! üí´'
    )
    assert WELCOME_MESSAGE == expected_message


def test_help_message():
    expected_message = (
                """
                –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –ø–∞—Ä—É! üë´
                
                –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:
                - "–ù–∞—á–∞—Ç—å" ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫.
                - "–ù–∞–π—Ç–∏ –ø–∞—Ä—É" ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤.
                - "–ü–æ–º–æ—â—å" ‚Äî –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞.
                
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.
                
                –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ!
                """
    )
    assert HELP_MESSAGE == expected_message
